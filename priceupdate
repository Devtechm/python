import csv
import pandas as pd
from pandas import ExcelWriter
import os
from datetime import datetime
import shutil
from openpyxl import load_workbook
import openpyxl
from openpyxl.styles import PatternFill


d = datetime.today()
date = d.strftime("%m%d%Y")
mainDir = '/Users/don/Desktop/price update/'

print('\n\n-------------------------')
exportFile = input('Enter the export CSV name:\n')
exportFile = mainDir + exportFile
brandName = input('\nEnter Brand name without space:\n')

subDir = mainDir + brandName + '/'
os.mkdir (subDir)
print ('\nBrand Folder Created ----- Complete')

subDir = mainDir + 'beverage air' + '/'
savePath = subDir + 'beverage air' + '_price_update-' + date
backupPath = savePath + '-BACKUP.csv'
shutil.copyfile(exportFile, backupPath)
print ('\nBackup File Renamed ----- Complete')

workingFile = savePath + '-WORKING.csv'
shutil.copyfile(backupPath, workingFile)

df = pd.read_csv(workingFile, encoding='latin-1')
df = df.sort_values(by=["mfr_discount_product_category"])

columns = ['a0_mfr_id', 'sku', 'product_online', 'custom_options', 'gen_vendor', 'mfr_discount_product_category',
    'mfr_model_replacement', 'mfr_model_status', 'a0_special_order', 'ext_stock_status_in', 'ext_stock_status_out',
    'mfr_model_status_date_update', 'gen_price_update_date', 'map_price', 'msrp_price', 'product_options_container',
    'ka_price_list', 'cost', 'cost_bandg', 'cost_bsem', 'cost_daroma', 'cost_freight', 'cost_special_model',
    'cost_special_value', 'cost_web', 'ka_price_map', 'price', 'ka_price_local']

columns.reverse()
for i in range(len(columns)):
    leftColumns = df.pop(columns[i])
    df.insert(0, columns[i], leftColumns)


df.to_csv(workingFile, encoding='utf-8', index=False, header=True)

read_file = pd.read_csv (workingFile, encoding='latin-1')
read_file.to_excel (savePath + '-WORKING.xlsx', index = None, header=True)
print ('\nWorking File Created ----- Complete')

dest = shutil.move(workingFile, mainDir)
print ('\nFile organized ----- Complete')

formulaColumns = [' ', 'VLOOKUP', 'COST Formula', 'Cost Freight Formula', 'Price Formula', 'LP Formula', '']
priceColumns = ['gen_price_update_date', 'ka_price_list', 'cost', 'cost_freight', 'ka_price_map', 'price', 'ka_price_local']
newPriceColumns = []
workingFile = savePath + '-WORKING.xlsx'
df = pd.read_excel(workingFile)


insert = df.columns.get_loc('product_options_container') + 1
for col in formulaColumns:
    df.insert(insert, col, None)
    insert = df.columns.get_loc(col) + 1

for col in priceColumns:
    insert = df.columns.get_loc(col) + 1
    df.insert(insert, col + '_NEW', None)
    newPriceColumns.append(col + '_NEW')

print ('\nNew Columns ADDED ----- Complete')

inActive = df.loc[(df['mfr_model_status'] != "Active")]
sheet2 = subDir + 'TO BE HIDDEN DISCONTINUED.xlsx'
df2 = pd.DataFrame(inActive)
df2.to_excel(sheet2, 'TO BE HIDDEN DISCONTINUED', encoding='utf-8', index=False, header=True)
print("\nSave Discontinued to new sheet ----- Complete")

df = df.loc[(df['mfr_model_status'] == "Active")]
df.shape


    
# def fill_color(val):
#     return 'background-color: green'
# df = df.style.applymap(fill_color, subset=newPriceColumns)
df.to_excel(workingFile, encoding='utf-8', index=False, header=True)
print ('\nNew Columns Color ADDED ----- Complete')


wb = openpyxl.load_workbook(filename=workingFile)

sheet = wb['Sheet1']
emptyRow = ['']
indent=0
while (indent < 2):
    sheet.append(emptyRow)
    indent+=1

discontinue = ['TO BE HIDDEN/DISCONTINUED']
sheet.append(discontinue)
wb.save(workingFile)
print("\nDiscontinue Row Added ----- Complete")

lastRow = len(sheet['A'])



df = pd.read_excel(workingFile)
df2 = pd.read_excel(sheet2)
df = df.append(df2, ignore_index=True)

def fill_color(val):
    return 'background-color: green'
df = df.style.applymap(fill_color, subset=newPriceColumns)

df.to_excel(workingFile, encoding='utf-8', index=False, header=True)

wb = openpyxl.load_workbook(filename=workingFile)
sheet = wb['Sheet1']
for i in range (65, 91):
    rowName = chr(i) + str(lastRow)
    fill_pattern = PatternFill(patternType='solid', fgColor='808080')
    sheet[rowName].fill = fill_pattern
wb.save(workingFile)
print("\nColor Added to Row Header ----- Complete")



# sheet2 = subDir + 'TO BE HIDDEN DISCONTINUED.xlsx'
# title = ['sku', 'visibility', 'product_online', 'manage_stock', 'use_config_manage_stock', 'is_in_stock', 'mfr_model_status', 'mfr_model_replacement', 'mfr_model_status_date_update', 'ext_stock_status_in', 'ext_stock_status_out']
# df2 = pd.DataFrame(columns = title)
# writer = ExcelWriter(sheet2)
# df2.to_excel(writer,'TO BE HIDDEN DISCONTINUED', encoding='utf-8', index=False, header=True)
# writer.save()
# print("Create TO BE HIDDEN DISCONTINUED sheet ----- Completed")

# tem = subDir + 'tem.xlsx'
# df2 = pd.DataFrame(inActive)
# df2.to_excel(tem, encoding='utf-8', index=False, header=True)
# print("Save Discontinued to new sheet ----- Completed")

#Move Inactive rows under Discontinued
#Find different category
#Pull data from update file
#Apply pricing formulas
#Add Discontinued Sku to sheet2
#Move sheet2 to main sheet
