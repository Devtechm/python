import csv
import pandas as pd
from pandas import ExcelWriter
import os
from datetime import datetime
import shutil
from openpyxl import load_workbook
import openpyxl
from openpyxl.styles import PatternFill


d = datetime.today()
date = d.strftime("%m%d%Y")
mainDir = '/Users//Desktop/price update/'

print('\n\n-------------------------')
# exportFile = input('Enter the export CSV name:\n')
exportFile = 'catalog_product_20220815_192233.csv'
exportFile = mainDir + exportFile
# brandName = input('\nEnter Brand name without space:\n')
brandName = 'beverage air'

subDir = mainDir + brandName + '/'
os.mkdir (subDir)
print ('\nBrand Folder Created ----- Complete')

subDir = mainDir + 'beverage air' + '/'
savePath = subDir + 'beverage air' + '_price_update-' + date
backupPath = savePath + '-BACKUP.csv'
shutil.copyfile(exportFile, backupPath)
print ('\nBackup File Renamed ----- Complete')

workingFile = savePath + '-WORKING.csv'
shutil.copyfile(backupPath, workingFile)

df = pd.read_csv(workingFile, encoding='latin-1')
df = df.sort_values(by=["mfr_discount_product_category"])

columns = ['a0_mfr_id', 'sku', 'product_online', 'custom_options', 'gen_vendor', 'mfr_discount_product_category',
    'mfr_model_replacement', 'mfr_model_status', 'a0_special_order', 'ext_stock_status_in', 'ext_stock_status_out',
    'mfr_model_status_date_update', 'gen_price_update_date', 'map_price', 'msrp_price', 'product_options_container',
    'ka_price_list', 'cost', 'cost_bandg', 'cost_bsem', 'cost_daroma', 'cost_freight', 'cost_special_model',
    'cost_special_value', 'cost_web', 'ka_price_map', 'price', 'ka_price_local']

columns.reverse()
for i in range(len(columns)):
    leftColumns = df.pop(columns[i])
    df.insert(0, columns[i], leftColumns)


df.to_csv(workingFile, encoding='utf-8', index=False, header=True)

read_file = pd.read_csv (workingFile, encoding='latin-1')
read_file.to_excel (savePath + '-WORKING.xlsx', index = None, header=True)
print ('\nWorking File Created ----- Complete')

dest = shutil.move(workingFile, mainDir)
print ('\nFile organized ----- Complete')

formulaColumns = [' ', 'VLOOKUP', 'Cost Formula', 'Cost Freight Formula', 'Price Formula', 'LP Formula', '']
priceColumns = ['gen_price_update_date', 'ka_price_list', 'cost', 'cost_freight', 'cost_special_model', 'cost_special_value', 'cost_web', 'ka_price_map', 'price', 'ka_price_local']
newPriceColumns = []
workingFile = savePath + '-WORKING.xlsx'
df = pd.read_excel(workingFile)


insert = df.columns.get_loc('product_options_container') + 1
for col in formulaColumns:
    df.insert(insert, col, None)
    insert = df.columns.get_loc(col) + 1

for col in priceColumns:
    insert = df.columns.get_loc(col) + 1
    df.insert(insert, col + '_NEW', None)
    newPriceColumns.append(col + '_NEW')

print ('\nNew Columns ADDED ----- Complete')

inActive = df.loc[(df['mfr_model_status'] != "Active")]
sheet2 = savePath + 'TO BE HIDDEN DISCONTINUED.xlsx'
df2 = pd.DataFrame(inActive)
df2.to_excel(sheet2, 'TO BE HIDDEN DISCONTINUED', encoding='utf-8', index=False, header=True)
print("\nSave Discontinued to new sheet ----- Complete")

df = df.loc[(df['mfr_model_status'] == "Active")]
df.shape


df.to_excel(workingFile, encoding='utf-8', index=False, header=True)
print ('\nNew Columns Color ADDED ----- Complete')


wb = openpyxl.load_workbook(filename=workingFile)

sheet = wb['Sheet1']
emptyRow = ['']
indent=0
while (indent < 2):
    sheet.append(emptyRow)
    indent+=1

discontinue = ['TO BE HIDDEN/DISCONTINUED']
sheet.append(discontinue)
wb.save(workingFile)
print("\nDiscontinue Row Added ----- Complete")

lastRow = len(sheet['A'])



df = pd.read_excel(workingFile)
df2 = pd.read_excel(sheet2)
df = df.append(df2, ignore_index=True)

date = d.strftime("%m/%d/%Y")

title = ['visibility', 'product_online', 'manage_stock', 'use_config_manage_stock', 'is_in_stock', 'mfr_model_status', 'mfr_model_replacement', 'mfr_model_status_date_update', 'ext_stock_status_in', 'ext_stock_status_out']
values = ['Catalog, Search', '1', '1', '0', '0', 'Discontinued', ' ', date, '_EMPTY_VALUE_', '_EMPTY_VALUE_']
df2 = df2['sku']
df2.to_excel(sheet2, encoding='utf-8', index=False, header=True)

df2 = pd.read_excel(sheet2)
insert = df2.columns.get_loc('sku') + 1
count = 0
for col in title:
    df2.insert(insert, col, None)
    df2[col] = values[count]
    insert = df2.columns.get_loc(col) + 1
    count+=1

hidden = savePath + '-HIDDEN-IMPORT.csv'
df2.to_csv(hidden, encoding='utf-8', index=False, header=True)
print("Create Hidden sheet ----- Completed")


df = df.assign(gen_price_update_date_NEW=date)

# vendorFile = input('\n-------------------------\nEnter the file name of the updated pricing provided by vendor:\n')
vendorFile = 'BEVERAGE-AIR COOLERS & ACCESSORIES -AUG 2022 FIELD COPY.xlsx'

vendorFile = mainDir + vendorFile
df3 = pd.read_excel(vendorFile)

df['ka_price_list_NEW']=df['a0_mfr_id'].map(dict(zip(df3.Model,df3.List)))
df['VLOOKUP']=df['a0_mfr_id'].map(dict(zip(df3.Model,df3.MAP)))

categoryList = df['mfr_discount_product_category'].to_list()
categoryList = [*set(categoryList)]
categoryList = [x for x in categoryList if str(x) != 'nan']
print(categoryList)


formulas = ['Cost Formula', 'Cost Freight Formula', 'Price Formula', 'LP Formula']

if len(categoryList) != 0:
    for catagory in categoryList:
        print(catagory)
        for formula in formulas:
            print("\nWhat is the ", formula, " for: ", catagory)
            print("Enter n or no to skip")
            getInput = input()
            if getInput != 'n':
                df.loc[(df['gen_vendor'] == catagory), formula] = round(df['ka_price_list_NEW'] * float(getInput), 2)

else:
    for formula in formulas:
            print("\nWhat is the ", formula)
            print("Enter n or no to skip")
            getInput = input()
            if getInput != 'n':
                df[formula] = round(df['ka_price_list_NEW'] * float(getInput), 2)


df.to_excel(workingFile, encoding='utf-8', index=False, header=True)
print("\nApply price formulas ----- Completed")


df = pd.read_excel(workingFile)
movePriceColumns = ['cost_New', 'cost_freight_New', 'ka_price_map_NEW', 'price_NEW', 'ka_price_local_NEW']
moveFormulaColumns = ['Cost Formula', 'Cost Freight Formula', 'VLOOKUP', 'Price Formula', 'LP Formula']

count = 0
for col in movePriceColumns:
    df[col]=df[moveFormulaColumns[count]]
    count+=1

df.to_excel(workingFile, encoding='utf-8', index=False, header=True)


def fill_color(val):
    return 'background-color: green'
df = df.style.applymap(fill_color, subset=newPriceColumns)

df.to_excel(workingFile, encoding='utf-8', index=False, header=True)

wb = openpyxl.load_workbook(filename=workingFile)
sheet = wb['Sheet1']
for i in range (65, 91):
    rowName = chr(i) + str(lastRow)
    fill_pattern = PatternFill(patternType='solid', fgColor='808080')
    sheet[rowName].fill = fill_pattern
wb.save(workingFile)
print("\nColor Added to Row Header ----- Complete")

os.remove(sheet2)

print("\n\nDouble check the working file before proceeding!")
input("Press the <ENTER> key to continue...")


backupPath = savePath + '-BACKUP.xlsx'
shutil.copyfile(workingFile, backupPath)
df3 = pd.read_excel(backupPath)
df3.drop(df3.index[lastRow])
df3 = df3.loc[(df3['mfr_model_status'] == "Active")]
df3.shape
df3 = df3[['sku', 'gen_price_update_date_NEW', 'ka_price_list_NEW', 'cost_NEW', 'cost_freight_NEW', 'cost_special_model_NEW', 'cost_special_value_NEW', 'cost_web_NEW', 'ka_price_map_NEW', 'price_NEW', 'ka_price_local_NEW']]
df3.dropna(how='all', axis=1, inplace=True)
df3.to_excel(backupPath, encoding='utf-8', index=False, header=True)

df3 = pd.read_excel(backupPath)
df3.columns = df3.columns.str.replace('_New', '')
importFile = savePath + '-IMPORT.csv'
df3.to_csv(importFile, encoding='utf-8', index=False, header=True)
os.remove(backupPath)

