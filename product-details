from urllib.request import Request, urlopen
import re
from bs4 import BeautifulSoup
import pandas as pd
import requests
import shutil
import time
import urllib.request, urllib.error
from urllib.parse import urlparse
import os
import csv
import pandas as pd
from pandas import ExcelWriter
import os
from datetime import datetime
import shutil
from openpyxl import load_workbook
import openpyxl
from openpyxl.styles import PatternFill


path = '/users//desktop/'
excel = path + "town.xlsx"
excel_out = path + "town.xlsx"
url = 'https://town.com/?s='
outfile = path + "town-404links.txt"
df2 = pd.DataFrame(columns=["title", "a0_mfr_id", "weight", "product_link", "image_link"])
title = ""
href = ""
df = pd.read_excel(excel)
df2 = pd.read_excel(excel_out)
sku = df['a0_mfr_id']

for s in sku:
    search = url + str(s)

    try:
        header = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36."}
        req = Request(search, headers=header)
        html_page = urlopen(req).read()
        soup = BeautifulSoup(html_page, "lxml")

        for a in soup.find_all("a", class_="woocommerce-LoopProduct-link"):
            href = a['href']
            
            req = Request(href, headers=header)
            html_page = urlopen(req).read()
            soup = BeautifulSoup(html_page, "lxml")

            title = soup.find("h1", class_="product_title" ).text

            image = soup.find("img", class_="attachment-woocommerce_single").get('src')
            extension = image[-4:]
            image = '-'.join(image.split('-')[:-1])
            image += extension

            for row in soup.find_all("tr", class_="woocommerce-product-attributes-item--weight"):
                td = row.find('td')
                weight = td.text.replace("lbs", "").strip()

        df2 = df2.append({'title': title,  'a0_mfr_id': s, 'weight': weight, 'product_link': href, 'image_link': image}, ignore_index=True)
        print(title, s, weight, href, image)
        df2.to_excel(excel_out, encoding='utf-8', index=False, header=True)
        time.sleep(3)
    
    except urllib.error.HTTPError as e:                
        if e.code == 404:
            with open(outfile, 'w') as fout:
                fout.write(search)

    except urllib.error.URLError as e:
        print("\n", href, "\n", e, "\n")
